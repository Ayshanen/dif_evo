import numpy as np
import matplotlib as mplt
#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
xmin = 0.1  # минимальное расстояние между диполями. Меньше 0.1 берём редко.
xmax = 1 + xmin  # максимальное расстояние между диполями.
step = 0.01  # шаг значения расстояния
n = 100   # int((xmax - xmin) / step)                                                   # количество шагов значения расстояний. Чем больше - тем точнее, но грузит дольше.
#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    
dimensions = 1  # количество измерений в системе
symmetry = 'mirror'           # none - нет симметрии, mirror - зеркальная с N на оси, C#


N = 26  # количество диполей`

minimum = 'global'  # ишем глобальный 'global' или локальный 'local' минимум

x = [s for s in np.linspace(xmin, xmax, n)]  # массив с шагами по х
'''
font = {'family' : 'sans-serif',
        'weight' : 'normal',
        'size'   : 26}
mplt.rc('font', **font)
cm = mplt.colormaps['bwr']
'''
center = 0                       # для симметрии. 0 - нет диполя в центре, 1 - есть.

n = 1                            # порядок симметрии. Дефолт - 1
dipoles_on_axis = 0              #


iteration_precision = 30         # точность. 10 - обычная


display_evolution = False